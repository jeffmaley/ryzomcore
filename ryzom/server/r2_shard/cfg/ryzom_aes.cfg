DontUseNS = 1;

// Variables required to be defined by other cfgs
//ASHost = "localhost";
//ASPort = "46701";
//AESPort = "46702";

// Commands generated by patch manager after this config file
//StartCommands +=
//{
//	"aes.addRegisteredService ns",
//	"aes.addRegisteredService su",
//	"aes.addRegisteredService bs",
//	"aes.addRegisteredService ts",
//	"aes.addRegisteredService ms",
//	"aes.addRegisteredService ais",
//	"aes.addRegisteredService dss",
//	"aes.addRegisteredService egs",
//	"aes.addRegisteredService fs",
//	"aes.addRegisteredService gpms",
//	"aes.addRegisteredService ios",
//	"aes.addRegisteredService ws",
//};

ns = { "runner/ns", "ryzom_naming_service_rd.exe", "-NDSS" };
su = { "runner/su", "shard_unifier_service_rd.exe", "-NDSS" };
bs = { "runner/bs", "backup_service_rd.exe", "-NDSS" };
ts = { "runner/ts", "ticks_service_rd.exe", "-NDSS" };
ms = { "runner/ms", "mirror_service_rd.exe", "-NDSS" };
ais = { "runner/ais", "ai_service_rd.exe", "-NDSS" };
dss = { "runner/dss", "dynamic_scenario_service_rd.exe", "-NDSS" };
egs = { "runner/egs", "entities_game_service_rd.exe", "-NDSS" };
fs = { "runner/fs", "frontend_service_rd.exe", "-NDSS" };
gpms = { "runner/gpms", "gpm_service_rd.exe", "-NDSS" };
ios = { "runner/ios", "input_output_service_rd.exe", "-NDSS" };
ws = { "runner/ws", "ryzom_welcome_service_rd.exe", "-NDSS" };

StartCommands +=
{
	// create the admin executor service module 
	"moduleManager.createModule AdminExecutorService aes",

	// create a gateway to connect to as
	"moduleManager.createModule StandardGateway asc_gw",
	// create a layer 3 client
	"asc_gw.transportAdd L3Client l3c",
	"asc_gw.transportCmd l3c(connect addr="+ASHost+":"+ASPort+")",

	// create a gateway for services to connect
	"moduleManager.createModule StandardGateway aes_gw",
	// create a layer 3 server
	"aes_gw.transportAdd L3Server l3s",
	"aes_gw.transportOptions l3s(PeerInvisible)",
	"aes_gw.transportCmd l3s(open port="+AESPort+")",

	// plug the as
	"aes.plug asc_gw",
	"aes.plug aes_gw",
};